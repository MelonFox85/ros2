# ===================================================================================
# ==                 Инструкции по Сборке для Пакета ROS 2                       ==
# ===================================================================================
# Файл: CMakeLists.txt
# Пакет: encoders_cpp_pkg
# Автор: GitHub Copilot (для Айрата)
# Дата: 2025-07-09
#
# Описание:
# Этот файл управляет процессом сборки (компиляции) кода в пакете.
# Он определяет, какие зависимости необходимы, какой исходный файл
# компилировать, в какой исполняемый файл его объединять, и куда
# устанавливать результат.
#
# ВАЖНО: Эта версия полностью отказывается от внешних библиотек
# для работы с GPIO (libgpiod, pigpiod), так как вся работа с
# энкодерами делегирована ядру Linux. Это делает сборку проще и надежнее.
#
# ИЗМЕНЕНИЕ: Удалена секция установки для директории 'launch',
# так как запуск будет производиться из отдельного пакета.
# -----------------------------------------------------------------------------------

# Указываем минимальную требуемую версию CMake и название проекта.
cmake_minimum_required(VERSION 3.8)
project(encoders_cpp_pkg)

# --- Поиск необходимых зависимостей (других пакетов ROS 2) ---
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(tf2_ros REQUIRED)

# --- Определение исполняемого файла ---
# Мы создаем исполняемый файл с именем 'odom_publisher_node'
# из исходного файла 'src/odom_publisher_node.cpp'.
# Рекомендуется давать файлам осмысленные имена.
add_executable(odom_publisher_node src/odom_publisher_node.cpp)

# --- Связывание зависимостей с исполняемым файлом ---
# Здесь мы указываем компилятору, какие библиотеки должен использовать наш
# исполняемый файл.
ament_target_dependencies(
  odom_publisher_node
  rclcpp
  nav_msgs
  geometry_msgs
  tf2_ros
)

# --- Правила установки (инсталляции) ---
# Установка исполняемого файла в директорию lib, чтобы 'ros2 run' мог его найти.
install(TARGETS
  odom_publisher_node
  DESTINATION lib/${PROJECT_NAME}
)

# --- Тестирование и экспорт ---
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
endif()

# Завершающая команда, необходимая для всех пакетов ament_cmake.
ament_package()
